{"version":3,"file":"static/js/866.35eaef12.chunk.js","mappings":"8LAkCA,UA7BgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAQA,OANAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAsBN,GAASO,MAAK,SAAAC,GAAI,OAAIJ,EAAWI,EAAKC,QAApB,GACzC,GAAE,CAACT,IAEJU,QAAQC,IAAIR,IAGV,wBACsB,IAAnBA,EAAQS,QACP,iEAEAT,EAAQU,KAAI,SAAAC,GACV,IAAQC,EAAwBD,EAAxBC,OAAQC,EAAgBF,EAAhBE,QAASC,EAAOH,EAAPG,GACzB,OACE,2BACE,wBAAKF,KACL,uBAAIC,MAFGC,EAKZ,KAIR,C","sources":["Pages/Reviews.jsx"],"sourcesContent":["import { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { searchMovieReviewsApi } from 'utils/MovieApi';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    searchMovieReviewsApi(movieId).then(data => setReviews(data.results));\n  }, [movieId]);\n\n  console.log(reviews);\n\n  return (\n    <ul>\n      {reviews.length === 0 ? (\n        <li>We don`t have reviews for this movie</li>\n      ) : (\n        reviews.map(review => {\n          const { author, content, id } = review;\n          return (\n            <li key={id}>\n              <h3>{author}</h3>\n              <p>{content}</p>\n            </li>\n          );\n        })\n      )}\n    </ul>\n  );\n};\n\nexport default Reviews;\n"],"names":["movieId","useParams","useState","reviews","setReviews","useEffect","searchMovieReviewsApi","then","data","results","console","log","length","map","review","author","content","id"],"sourceRoot":""}