{"version":3,"file":"static/js/866.8ec71780.chunk.js","mappings":"8LAkCA,UA7BgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAQA,OANAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAsBN,GAASO,MAAK,SAAAC,GAAI,OAAIJ,EAAWI,EAAKC,QAApB,GACzC,GAAE,CAACT,IAEJU,QAAQC,IAAIR,IAGV,wBACsB,IAAnBA,EAAQS,QACP,iEAEAT,EAAQU,KAAI,SAAAC,GACV,IAAQC,EAAwBD,EAAxBC,OAAQC,EAAgBF,EAAhBE,QAASC,EAAOH,EAAPG,GACzB,OACE,2BACE,wBAAKF,KACL,uBAAIC,MAFGC,EAKZ,KAIR,C,mKC9BDC,EAAAA,GAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCACHC,EAAoB,WAC/B,OAAOF,EAAAA,GAAAA,IAAA,qBACsB,CACzBG,OAAQ,CACNC,QAASH,KAGZZ,MAAK,SAAAgB,GAAG,OAAIA,EAAIf,KAAKC,OAAb,GACZ,EAEYe,EAAiB,SAAAC,GAC5B,OAAOP,EAAAA,GAAAA,IAAA,eACgB,CACnBG,OAAQ,CACNC,QAASH,EACTM,MAAAA,KAGHlB,MAAK,SAAAgB,GAAG,OAAIA,EAAIf,KAAKC,OAAb,GACZ,EAEYiB,EAAqB,SAAAC,GAChC,OAAOT,EAAAA,GAAAA,IAAA,gBACSS,GAAY,CACxBN,OAAQ,CACNC,QAASH,KAGZZ,MAAK,SAAAgB,GAAG,OAAIA,EAAIf,IAAR,GACZ,EACYoB,EAAqB,SAAAD,GAChC,OAAOT,EAAAA,GAAAA,IAAA,gBACSS,EADT,YAC6B,CAChCN,OAAQ,CACNC,QAASH,KAGZZ,MAAK,SAAAgB,GAAG,OAAIA,EAAIf,IAAR,GACZ,EACYF,EAAwB,SAAAqB,GACnC,OAAOT,EAAAA,GAAAA,IAAA,gBACSS,EADT,YAC6B,CAChCN,OAAQ,CACNC,QAASH,KAGZZ,MAAK,SAAAgB,GAAG,OAAIA,EAAIf,IAAR,GACZ,C","sources":["Pages/Reviews.jsx","utils/MovieApi.js"],"sourcesContent":["import { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { searchMovieReviewsApi } from 'utils/MovieApi';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    searchMovieReviewsApi(movieId).then(data => setReviews(data.results));\n  }, [movieId]);\n\n  console.log(reviews);\n\n  return (\n    <ul>\n      {reviews.length === 0 ? (\n        <li>We don`t have reviews for this movie</li>\n      ) : (\n        reviews.map(review => {\n          const { author, content, id } = review;\n          return (\n            <li key={id}>\n              <h3>{author}</h3>\n              <p>{content}</p>\n            </li>\n          );\n        })\n      )}\n    </ul>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'bf2f80153749820bbc44799511345eed';\nexport const searchMovieTopApi = () => {\n  return axios\n    .get(`trending/movie/day`, {\n      params: {\n        api_key: API_KEY,\n      },\n    })\n    .then(res => res.data.results);\n};\n\nexport const searchMovieApi = query => {\n  return axios\n    .get(`search/movie`, {\n      params: {\n        api_key: API_KEY,\n        query,\n      },\n    })\n    .then(res => res.data.results);\n};\n\nexport const searchMovieToIdApi = movie_id => {\n  return axios\n    .get(`movie/${movie_id}`, {\n      params: {\n        api_key: API_KEY,\n      },\n    })\n    .then(res => res.data);\n};\nexport const searchMovieCastApi = movie_id => {\n  return axios\n    .get(`movie/${movie_id}/credits`, {\n      params: {\n        api_key: API_KEY,\n      },\n    })\n    .then(res => res.data);\n};\nexport const searchMovieReviewsApi = movie_id => {\n  return axios\n    .get(`movie/${movie_id}/reviews`, {\n      params: {\n        api_key: API_KEY,\n      },\n    })\n    .then(res => res.data);\n};\n"],"names":["movieId","useParams","useState","reviews","setReviews","useEffect","searchMovieReviewsApi","then","data","results","console","log","length","map","review","author","content","id","axios","API_KEY","searchMovieTopApi","params","api_key","res","searchMovieApi","query","searchMovieToIdApi","movie_id","searchMovieCastApi"],"sourceRoot":""}